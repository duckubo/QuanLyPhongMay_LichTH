//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyPhongMay_LichTH.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Do_An_Phan_MemEntities : DbContext
    {
        public Do_An_Phan_MemEntities()
            : base("name=Do_An_Phan_MemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Credential> Credentials { get; set; }
        public virtual DbSet<GIAO_VIEN> GIAO_VIEN { get; set; }
        public virtual DbSet<Hang> Hangs { get; set; }
        public virtual DbSet<History> Histories { get; set; }
        public virtual DbSet<Khoa> Khoas { get; set; }
        public virtual DbSet<LICH> LICHes { get; set; }
        public virtual DbSet<LoaiThietBi> LoaiThietBis { get; set; }
        public virtual DbSet<Loi> Lois { get; set; }
        public virtual DbSet<Loi_Maytinh> Loi_Maytinh { get; set; }
        public virtual DbSet<LOP> LOPs { get; set; }
        public virtual DbSet<LOP_SINHVIEN> LOP_SINHVIEN { get; set; }
        public virtual DbSet<MayTinh> MayTinhs { get; set; }
        public virtual DbSet<MayTinh_ThietBi> MayTinh_ThietBi { get; set; }
        public virtual DbSet<MONHOC> MONHOCs { get; set; }
        public virtual DbSet<PhieuDangKyDayBu> PhieuDangKyDayBus { get; set; }
        public virtual DbSet<PhieuDangKyMuonMay> PhieuDangKyMuonMays { get; set; }
        public virtual DbSet<PHONG> PHONGs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SINH_VIEN> SINH_VIEN { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ThayTheThietBi> ThayTheThietBis { get; set; }
        public virtual DbSet<ThietBi> ThietBis { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
    
        public virtual ObjectResult<Nullable<int>> CheckComputerDeviceExistence(string ma_mt, string ma_tb)
        {
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            var ma_tbParameter = ma_tb != null ?
                new ObjectParameter("Ma_tb", ma_tb) :
                new ObjectParameter("Ma_tb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckComputerDeviceExistence", ma_mtParameter, ma_tbParameter);
        }
    
        public virtual int DeleteComputer(string computerCode)
        {
            var computerCodeParameter = computerCode != null ?
                new ObjectParameter("ComputerCode", computerCode) :
                new ObjectParameter("ComputerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComputer", computerCodeParameter);
        }
    
        public virtual int DeleteComputerDevice(string ma_mt, string ma_tb)
        {
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            var ma_tbParameter = ma_tb != null ?
                new ObjectParameter("Ma_tb", ma_tb) :
                new ObjectParameter("Ma_tb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComputerDevice", ma_mtParameter, ma_tbParameter);
        }
    
        public virtual int DeleteDevice(string ma_tb)
        {
            var ma_tbParameter = ma_tb != null ?
                new ObjectParameter("Ma_tb", ma_tb) :
                new ObjectParameter("Ma_tb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDevice", ma_tbParameter);
        }
    
        public virtual int DeleteScheduleTest(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteScheduleTest", idParameter);
        }
    
        public virtual ObjectResult<DeviceById_Result> DeviceById(string ma_tb)
        {
            var ma_tbParameter = ma_tb != null ?
                new ObjectParameter("Ma_tb", ma_tb) :
                new ObjectParameter("Ma_tb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeviceById_Result>("DeviceById", ma_tbParameter);
        }
    
        public virtual ObjectResult<GetComputerCountDeviceTypes_Result> GetComputerCountDeviceTypes(string ma_mt)
        {
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComputerCountDeviceTypes_Result>("GetComputerCountDeviceTypes", ma_mtParameter);
        }
    
        public virtual ObjectResult<GetComputerRepairHistory_Result> GetComputerRepairHistory(string ma_mt)
        {
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComputerRepairHistory_Result>("GetComputerRepairHistory", ma_mtParameter);
        }
    
        public virtual ObjectResult<GetComputerStatistics_Result> GetComputerStatistics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComputerStatistics_Result>("GetComputerStatistics");
        }
    
        public virtual ObjectResult<GetDevicesOfComputer_Result> GetDevicesOfComputer(string ma_mt)
        {
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDevicesOfComputer_Result>("GetDevicesOfComputer", ma_mtParameter);
        }
    
        public virtual ObjectResult<GetDevicesWithRoom_Result> GetDevicesWithRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDevicesWithRoom_Result>("GetDevicesWithRoom");
        }
    
        public virtual ObjectResult<GetScheduleWithDetails_Result> GetScheduleWithDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleWithDetails_Result>("GetScheduleWithDetails");
        }
    
        public virtual int InsertComputer(string deviceName, string configuration, string roomID, Nullable<int> status, Nullable<System.DateTime> dateOfPurchase, string supplierId)
        {
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("DeviceName", deviceName) :
                new ObjectParameter("DeviceName", typeof(string));
    
            var configurationParameter = configuration != null ?
                new ObjectParameter("Configuration", configuration) :
                new ObjectParameter("Configuration", typeof(string));
    
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var dateOfPurchaseParameter = dateOfPurchase.HasValue ?
                new ObjectParameter("DateOfPurchase", dateOfPurchase) :
                new ObjectParameter("DateOfPurchase", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertComputer", deviceNameParameter, configurationParameter, roomIDParameter, statusParameter, dateOfPurchaseParameter, supplierIdParameter);
        }
    
        public virtual int InsertDevice(string ten_tb, string ma_loai, Nullable<int> ma_nha_san_xuat, Nullable<int> ma_tinh_trang, string mo_ta, string cau_hinh, Nullable<System.DateTime> ngay_them, string ma_mt)
        {
            var ten_tbParameter = ten_tb != null ?
                new ObjectParameter("Ten_tb", ten_tb) :
                new ObjectParameter("Ten_tb", typeof(string));
    
            var ma_loaiParameter = ma_loai != null ?
                new ObjectParameter("Ma_loai", ma_loai) :
                new ObjectParameter("Ma_loai", typeof(string));
    
            var ma_nha_san_xuatParameter = ma_nha_san_xuat.HasValue ?
                new ObjectParameter("Ma_nha_san_xuat", ma_nha_san_xuat) :
                new ObjectParameter("Ma_nha_san_xuat", typeof(int));
    
            var ma_tinh_trangParameter = ma_tinh_trang.HasValue ?
                new ObjectParameter("Ma_tinh_trang", ma_tinh_trang) :
                new ObjectParameter("Ma_tinh_trang", typeof(int));
    
            var mo_taParameter = mo_ta != null ?
                new ObjectParameter("Mo_ta", mo_ta) :
                new ObjectParameter("Mo_ta", typeof(string));
    
            var cau_hinhParameter = cau_hinh != null ?
                new ObjectParameter("cau_hinh", cau_hinh) :
                new ObjectParameter("cau_hinh", typeof(string));
    
            var ngay_themParameter = ngay_them.HasValue ?
                new ObjectParameter("Ngay_them", ngay_them) :
                new ObjectParameter("Ngay_them", typeof(System.DateTime));
    
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDevice", ten_tbParameter, ma_loaiParameter, ma_nha_san_xuatParameter, ma_tinh_trangParameter, mo_taParameter, cau_hinhParameter, ngay_themParameter, ma_mtParameter);
        }
    
        public virtual int InsertOrUpdateDevice(string ma_mt, string ma_tb, Nullable<System.DateTime> ngay_them)
        {
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            var ma_tbParameter = ma_tb != null ?
                new ObjectParameter("Ma_tb", ma_tb) :
                new ObjectParameter("Ma_tb", typeof(string));
    
            var ngay_themParameter = ngay_them.HasValue ?
                new ObjectParameter("Ngay_them", ngay_them) :
                new ObjectParameter("Ngay_them", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrUpdateDevice", ma_mtParameter, ma_tbParameter, ngay_themParameter);
        }
    
        public virtual int InsertScheduleTest(string @class, string room, string tuan, string thu, Nullable<int> tiet_bd, Nullable<int> tiet_kt)
        {
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var tuanParameter = tuan != null ?
                new ObjectParameter("Tuan", tuan) :
                new ObjectParameter("Tuan", typeof(string));
    
            var thuParameter = thu != null ?
                new ObjectParameter("Thu", thu) :
                new ObjectParameter("Thu", typeof(string));
    
            var tiet_bdParameter = tiet_bd.HasValue ?
                new ObjectParameter("Tiet_bd", tiet_bd) :
                new ObjectParameter("Tiet_bd", typeof(int));
    
            var tiet_ktParameter = tiet_kt.HasValue ?
                new ObjectParameter("Tiet_kt", tiet_kt) :
                new ObjectParameter("Tiet_kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertScheduleTest", classParameter, roomParameter, tuanParameter, thuParameter, tiet_bdParameter, tiet_ktParameter);
        }
    
        public virtual int ReturnComputerDevice(string computerCode, string deviceCode)
        {
            var computerCodeParameter = computerCode != null ?
                new ObjectParameter("ComputerCode", computerCode) :
                new ObjectParameter("ComputerCode", typeof(string));
    
            var deviceCodeParameter = deviceCode != null ?
                new ObjectParameter("DeviceCode", deviceCode) :
                new ObjectParameter("DeviceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReturnComputerDevice", computerCodeParameter, deviceCodeParameter);
        }
    
        public virtual ObjectResult<SeachComputerDevice_Result> SeachComputerDevice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeachComputerDevice_Result>("SeachComputerDevice");
        }
    
        public virtual ObjectResult<SeachDeviceOfComputer_Result> SeachDeviceOfComputer(string ma_loai, string ma_mt, Nullable<int> status, Nullable<int> brand, string deviceCode)
        {
            var ma_loaiParameter = ma_loai != null ?
                new ObjectParameter("ma_loai", ma_loai) :
                new ObjectParameter("ma_loai", typeof(string));
    
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("ma_mt", ma_mt) :
                new ObjectParameter("ma_mt", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var brandParameter = brand.HasValue ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(int));
    
            var deviceCodeParameter = deviceCode != null ?
                new ObjectParameter("deviceCode", deviceCode) :
                new ObjectParameter("deviceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeachDeviceOfComputer_Result>("SeachDeviceOfComputer", ma_loaiParameter, ma_mtParameter, statusParameter, brandParameter, deviceCodeParameter);
        }
    
        public virtual ObjectResult<SearchComputer_Result> SearchComputer(string brandId, string roomId, Nullable<int> status, string computerCode)
        {
            var brandIdParameter = brandId != null ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(string));
    
            var roomIdParameter = roomId != null ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var computerCodeParameter = computerCode != null ?
                new ObjectParameter("ComputerCode", computerCode) :
                new ObjectParameter("ComputerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchComputer_Result>("SearchComputer", brandIdParameter, roomIdParameter, statusParameter, computerCodeParameter);
        }
    
        public virtual ObjectResult<SearchDevice_Result> SearchDevice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchDevice_Result>("SearchDevice");
        }
    
        public virtual int SearchDevice2(Nullable<int> status, Nullable<int> devicetype, Nullable<int> guarantee, Nullable<int> projectid, string devicecode)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var devicetypeParameter = devicetype.HasValue ?
                new ObjectParameter("devicetype", devicetype) :
                new ObjectParameter("devicetype", typeof(int));
    
            var guaranteeParameter = guarantee.HasValue ?
                new ObjectParameter("guarantee", guarantee) :
                new ObjectParameter("guarantee", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var devicecodeParameter = devicecode != null ?
                new ObjectParameter("devicecode", devicecode) :
                new ObjectParameter("devicecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchDevice2", statusParameter, devicetypeParameter, guaranteeParameter, projectidParameter, devicecodeParameter);
        }
    
        public virtual ObjectResult<SearchDevice3_Result> SearchDevice3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchDevice3_Result>("SearchDevice3");
        }
    
        public virtual ObjectResult<SearchDevices_Result> SearchDevices(string ma_loai, string ma_mt, Nullable<int> status, Nullable<int> brand, string deviceCode)
        {
            var ma_loaiParameter = ma_loai != null ?
                new ObjectParameter("ma_loai", ma_loai) :
                new ObjectParameter("ma_loai", typeof(string));
    
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("ma_mt", ma_mt) :
                new ObjectParameter("ma_mt", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var brandParameter = brand.HasValue ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(int));
    
            var deviceCodeParameter = deviceCode != null ?
                new ObjectParameter("deviceCode", deviceCode) :
                new ObjectParameter("deviceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchDevices_Result>("SearchDevices", ma_loaiParameter, ma_mtParameter, statusParameter, brandParameter, deviceCodeParameter);
        }
    
        public virtual int SearchProject(Nullable<int> managerProject, Nullable<int> status, Nullable<int> typeProject, string projectSymbol)
        {
            var managerProjectParameter = managerProject.HasValue ?
                new ObjectParameter("managerProject", managerProject) :
                new ObjectParameter("managerProject", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var typeProjectParameter = typeProject.HasValue ?
                new ObjectParameter("TypeProject", typeProject) :
                new ObjectParameter("TypeProject", typeof(int));
    
            var projectSymbolParameter = projectSymbol != null ?
                new ObjectParameter("ProjectSymbol", projectSymbol) :
                new ObjectParameter("ProjectSymbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchProject", managerProjectParameter, statusParameter, typeProjectParameter, projectSymbolParameter);
        }
    
        public virtual ObjectResult<SelectDevicesByCategoryID_Result> SelectDevicesByCategoryID(string categoryID)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDevicesByCategoryID_Result>("SelectDevicesByCategoryID", categoryIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<StatisticalDeviceByBrand_Result> StatisticalDeviceByBrand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StatisticalDeviceByBrand_Result>("StatisticalDeviceByBrand");
        }
    
        public virtual int UpdateComputer(string deviceName, string configuration, string roomID, string oldRoomID, Nullable<int> status, string supplierId, string computerCode)
        {
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("DeviceName", deviceName) :
                new ObjectParameter("DeviceName", typeof(string));
    
            var configurationParameter = configuration != null ?
                new ObjectParameter("Configuration", configuration) :
                new ObjectParameter("Configuration", typeof(string));
    
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));
    
            var oldRoomIDParameter = oldRoomID != null ?
                new ObjectParameter("OldRoomID", oldRoomID) :
                new ObjectParameter("OldRoomID", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var computerCodeParameter = computerCode != null ?
                new ObjectParameter("ComputerCode", computerCode) :
                new ObjectParameter("ComputerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateComputer", deviceNameParameter, configurationParameter, roomIDParameter, oldRoomIDParameter, statusParameter, supplierIdParameter, computerCodeParameter);
        }
    
        public virtual int UpdateDevice(string ma_tb, string ten_tb, string ma_loai, Nullable<int> ma_nha_san_xuat, Nullable<int> ma_tinh_trang, string mo_ta, string cau_hinh, Nullable<System.DateTime> ngay_them, string ma_mt)
        {
            var ma_tbParameter = ma_tb != null ?
                new ObjectParameter("Ma_tb", ma_tb) :
                new ObjectParameter("Ma_tb", typeof(string));
    
            var ten_tbParameter = ten_tb != null ?
                new ObjectParameter("Ten_tb", ten_tb) :
                new ObjectParameter("Ten_tb", typeof(string));
    
            var ma_loaiParameter = ma_loai != null ?
                new ObjectParameter("Ma_loai", ma_loai) :
                new ObjectParameter("Ma_loai", typeof(string));
    
            var ma_nha_san_xuatParameter = ma_nha_san_xuat.HasValue ?
                new ObjectParameter("Ma_nha_san_xuat", ma_nha_san_xuat) :
                new ObjectParameter("Ma_nha_san_xuat", typeof(int));
    
            var ma_tinh_trangParameter = ma_tinh_trang.HasValue ?
                new ObjectParameter("Ma_tinh_trang", ma_tinh_trang) :
                new ObjectParameter("Ma_tinh_trang", typeof(int));
    
            var mo_taParameter = mo_ta != null ?
                new ObjectParameter("Mo_ta", mo_ta) :
                new ObjectParameter("Mo_ta", typeof(string));
    
            var cau_hinhParameter = cau_hinh != null ?
                new ObjectParameter("cau_hinh", cau_hinh) :
                new ObjectParameter("cau_hinh", typeof(string));
    
            var ngay_themParameter = ngay_them.HasValue ?
                new ObjectParameter("Ngay_them", ngay_them) :
                new ObjectParameter("Ngay_them", typeof(System.DateTime));
    
            var ma_mtParameter = ma_mt != null ?
                new ObjectParameter("Ma_mt", ma_mt) :
                new ObjectParameter("Ma_mt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDevice", ma_tbParameter, ten_tbParameter, ma_loaiParameter, ma_nha_san_xuatParameter, ma_tinh_trangParameter, mo_taParameter, cau_hinhParameter, ngay_themParameter, ma_mtParameter);
        }
    
        public virtual int UpdateScheduleTest(string id, string @class, string room, string tuan, string thu, Nullable<int> tiet_bd, Nullable<int> tiet_kt)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));
    
            var tuanParameter = tuan != null ?
                new ObjectParameter("Tuan", tuan) :
                new ObjectParameter("Tuan", typeof(string));
    
            var thuParameter = thu != null ?
                new ObjectParameter("Thu", thu) :
                new ObjectParameter("Thu", typeof(string));
    
            var tiet_bdParameter = tiet_bd.HasValue ?
                new ObjectParameter("Tiet_bd", tiet_bd) :
                new ObjectParameter("Tiet_bd", typeof(int));
    
            var tiet_ktParameter = tiet_kt.HasValue ?
                new ObjectParameter("Tiet_kt", tiet_kt) :
                new ObjectParameter("Tiet_kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateScheduleTest", idParameter, classParameter, roomParameter, tuanParameter, thuParameter, tiet_bdParameter, tiet_ktParameter);
        }
    }
}
